pipeline {
  agent {
    label "jenkins-maven"
  }
  environment {
    ORG               = 'REPLACE_ME_ORG'
    APP_NAME          = 'REPLACE_ME_APP_NAME'
    CHARTMUSEUM_CREDS = credentials('jenkins-x-chartmuseum')
  }
  stages {
    stage('Pre-Build') {
      steps {
        container('maven') {
          script {
            if (env.BRANCH_NAME == 'master') {
              // ensure it is not on a detached head, set up git credentials, and set the version
              sh '''
                git checkout master
                git config --global credential.helper store
                jx step git credentials
                echo \$(jx-release-version) > VERSION
                mvn versions:set -DnewVersion=\$(cat VERSION)
              '''
            } else if (env.BRANCH_NAME.startsWith('PR-')) {
              // set the version
              sh "mvn versions:set -DnewVersion=0.0.0-SNAPSHOT-$BRANCH_NAME-$BUILD_NUMBER"
            }
          }
        }
      }
    }
    stage('Build') {
      steps {
        container('maven') {
          script {
            if (env.BRANCH_NAME == 'master') {
              sh "mvn deploy"
            } else {
              sh "mvn install"
            }
          }
        }
      }
    }
    stage('Preview') {
      when {
        branch 'PR-*'
      }
      environment {
        PREVIEW_VERSION = "0.0.0-SNAPSHOT-$BRANCH_NAME-$BUILD_NUMBER"
        PREVIEW_NAMESPACE = "$APP_NAME-$BRANCH_NAME".toLowerCase()
        HELM_RELEASE = "$PREVIEW_NAMESPACE".toLowerCase()
      }
      steps {
        container('maven') {
          sh 'export VERSION=$PREVIEW_VERSION && skaffold build -f skaffold.yaml'
          sh "jx step post build --image $DOCKER_REGISTRY/$ORG/$APP_NAME:$PREVIEW_VERSION"
        }
        dir ('./charts/preview') {
          container('maven') {
            sh "make preview"
            sh "jx preview --app $APP_NAME --dir ../.."
          }
        }
      }
    }
    stage('Release') {
      when {
        branch 'master'
      }
      steps {
        dir ('./charts/REPLACE_ME_APP_NAME') {
          container('maven') {
            sh "make tag"
          }
        }
        container('maven') {
          sh "jx step post build --image $DOCKER_REGISTRY/$ORG/$APP_NAME:\$(cat VERSION)"
        }
      }
    }
    stage('Promote') {
      when {
        branch 'master'
      }
      steps {
        dir ('./charts/REPLACE_ME_APP_NAME') {
          container('maven') {
            sh 'jx step changelog --version v\$(cat ../../VERSION)'

            // release the helm chart
            sh 'jx step helm release'

            // promote through all 'Auto' promotion Environments
            sh 'jx promote -b --all-auto --timeout 1h --version \$(cat ../../VERSION)'
          }
        }
      }
    }
  }
  post {
    always {
      cleanWs()
    }
  }
}
